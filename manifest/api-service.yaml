---
# Source: api-service/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-service
  labels:
    helm.sh/chart: api-service-0.1.0
    app: api-service
    version: v1
    app.kubernetes.io/name: api-service
    app.kubernetes.io/instance: api-service
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
---
# Source: api-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: api-service
  labels:
    helm.sh/chart: api-service-0.1.0
    app: api-service
    version: v1
    app.kubernetes.io/name: api-service
    app.kubernetes.io/instance: api-service
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: nginx
  selector:
    app: api-service
    version: v1
    app.kubernetes.io/name: api-service
    app.kubernetes.io/instance: api-service
---
# Source: api-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-service
  labels:
    helm.sh/chart: api-service-0.1.0
    app: api-service
    version: v1
    app.kubernetes.io/name: api-service
    app.kubernetes.io/instance: api-service
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-service
      version: v1
      app.kubernetes.io/name: api-service
      app.kubernetes.io/instance: api-service
  template:
    metadata:
      labels:
        app: api-service
        version: v1
        app.kubernetes.io/name: api-service
        app.kubernetes.io/instance: api-service
    spec:
      imagePullSecrets:
        - name: regcred
      serviceAccountName: api-service
      securityContext:
        {}
      containers:
        - name: api-service
          securityContext:
            {}
          image: "docker.pkg.github.com/300kks/api-service/api-service:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
          resources:
            {}

